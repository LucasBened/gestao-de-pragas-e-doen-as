package telas;


import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author lucas.sbenedito
 */
public class ListarOcorrencias extends javax.swing.JFrame {

    /**
     * Creates new form ListarUsuarios
     */
    public ListarOcorrencias() {
        initComponents();
        carregarDados();
    }

    private void carregarDados() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/dadosgestao", "root", "p@$$w0rd");

            PreparedStatement st = conectado.prepareStatement("SELECT * FROM dados_pragas");
            ResultSet usuarios = st.executeQuery(); //este comando executa o SELECT da linha anterior
            DefaultTableModel tblModelo = (DefaultTableModel) tblOcorr.getModel();

            while (usuarios.next()) {
                Object linha[] = { //O object armazena qualquer tipo de valor, string, int, double, etc... Basicamente uma variavel sem ter tipo definido
                    usuarios.getString("id"),
                    usuarios.getString("pais"),
                    usuarios.getString("tipo_praga"),
                    usuarios.getString("area_afetada"),
                    usuarios.getString("numero_ocorrencias"),
                    usuarios.getString("impacto_producao"),
                    usuarios.getString("medidas_controle"),
                    usuarios.getString("custo_controle"),
                    usuarios.getString("ano")
                };
                tblModelo.addRow(linha);
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOcorr = new javax.swing.JTable();
        lblCargo = new javax.swing.JLabel();
        cmbCargo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        iptID = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        tblOcorr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Pais", "Tipo de Praga", "Area Afet.", "Num Ocorr.", "Impact Prod.", "Medidas de Controle", "Custo de Controle", "Ano"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOcorr);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 80, 900, 280);

        lblCargo.setText("Tipo de Praga");
        getContentPane().add(lblCargo);
        lblCargo.setBounds(50, 20, 140, 20);

        cmbCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Afídeos", "Lagartas", "Besouros", "Cupins", "Gorgulhos", "Psilídeos", "Tripes", "Cochonilhas", "Nematoides", "Moscas-minadoras" }));
        cmbCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCargoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbCargo);
        cmbCargo.setBounds(50, 40, 180, 26);

        jLabel1.setText("ID");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(260, 20, 50, 16);
        getContentPane().add(iptID);
        iptID.setBounds(255, 40, 80, 26);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(370, 40, 76, 27);

        setSize(new java.awt.Dimension(997, 403));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCargoActionPerformed
        String  c = cmbCargo.getSelectedItem().toString();
        if(c.equals("Todos")){
            carregarDados();
            return;
        }

        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/dadosgestao", "root", "p@$$w0rd");

            PreparedStatement st = conectado.prepareStatement("SELECT * FROM dados_pragas WHERE tipo_praga = ? ");
            st.setString(1,c);
            ResultSet tipoPraga = st.executeQuery(); //este comando executa o SELECT da linha anterior
            DefaultTableModel tblModelo = (DefaultTableModel) tblOcorr.getModel();
            tblModelo.setRowCount(0);
            while (tipoPraga.next()) {
                Object linha[] = {                                  //O object armazena qualquer tipo de valor, string, int, double, etc... Basicamente uma variavel sem ter tipo definido
                    tipoPraga.getString("id"),
                    tipoPraga.getString("pais"),
                    tipoPraga.getString("tipo_praga"),
                    tipoPraga.getString("area_afetada"),
                    tipoPraga.getString("numero_ocorrencias"),
                    tipoPraga.getString("impacto_producao"),
                    tipoPraga.getString("medidas_controle"),
                    tipoPraga.getString("custo_controle"),
                    tipoPraga.getString("ano")
                };
                tblModelo.addRow(linha);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_cmbCargoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        String id = iptID.getText();

        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/dadosgestao", "root", "p@$$w0rd");
            PreparedStatement st = conectado.prepareStatement("SELECT * FROM dados_pragas WHERE id = ? ");
            st.setString(1,id);
            ResultSet tipoPraga = st.executeQuery(); //este comando executa o SELECT da linha anterior
            DefaultTableModel tblModelo = (DefaultTableModel) tblOcorr.getModel();
            tblModelo.setRowCount(0);
            while (tipoPraga.next()) {
                Object linha[] = {                                  //O object armazena qualquer tipo de valor, string, int, double, etc... Basicamente uma variavel sem ter tipo definido
                    tipoPraga.getString("id"),
                    tipoPraga.getString("pais"),
                    tipoPraga.getString("tipo_praga"),
                    tipoPraga.getString("area_afetada"),
                    tipoPraga.getString("numero_ocorrencias"),
                    tipoPraga.getString("impacto_producao"),
                    tipoPraga.getString("medidas_controle"),
                    tipoPraga.getString("custo_controle"),
                    tipoPraga.getString("ano")
                };
                tblModelo.addRow(linha);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Entre em contato com o suporte e informe o erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarOcorrencias.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarOcorrencias.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarOcorrencias.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarOcorrencias.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarOcorrencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox<String> cmbCargo;
    private javax.swing.JTextField iptID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JTable tblOcorr;
    // End of variables declaration//GEN-END:variables
}
